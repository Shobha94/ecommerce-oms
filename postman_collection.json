{
  "info": {
    "name": "Ecommerce OMS (Local)",
    "_postman_id": "ecom-oms-1759731591",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base",
      "value": "http://127.0.0.1:8000"
    },
    {
      "key": "token",
      "value": ""
    },
    {
      "key": "adminToken",
      "value": ""
    },
    {
      "key": "customerToken",
      "value": ""
    },
    {
      "key": "categoryId",
      "value": ""
    },
    {
      "key": "productId",
      "value": ""
    },
    {
      "key": "cartItemId",
      "value": ""
    },
    {
      "key": "orderId",
      "value": ""
    },
    {
      "key": "paymentId",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "A) Register (customer)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/register",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "register"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"name\": \"Test User\", \"email\": \"test@example.com\", \"password\": \"secret123\", \"role\": \"customer\"}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "",
              "pm.test(\"Status 200/201\", () => [200,201].includes(pm.response.code));",
              "const ct = (pm.response.headers.get(\"Content-Type\")||\"\").toLowerCase();",
              "if (ct.includes(\"application/json\")) {",
              "  const body = pm.response.json();",
              "  if (body.token) {",
              "    pm.environment.set(\"customerToken\", body.token);",
              "    pm.environment.set(\"token\", body.token);",
              "  }",
              "} else {",
              "  console.warn(\"Non-JSON:\", pm.response.text());",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "B) Login (admin)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/login",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "login"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"email\": \"admin1@example.com\", \"password\": \"password\"}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "",
              "pm.test(\"Status 200/201\", () => [200,201].includes(pm.response.code));",
              "const ct = (pm.response.headers.get(\"Content-Type\")||\"\").toLowerCase();",
              "if (ct.includes(\"application/json\")) {",
              "  const body = pm.response.json();",
              "  if (body.token) {",
              "    pm.environment.set(\"adminToken\", body.token);",
              "    ",
              "  }",
              "} else {",
              "  console.warn(\"Non-JSON:\", pm.response.text());",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "C) Me",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/me",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "me"
          ]
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"200 OK\", () => pm.response.code === 200);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "D) Create Category (admin)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/categories",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "categories"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"name\": \"Shoes\", \"description\": \"All kinds of shoes\"}"
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"token\", pm.environment.get(\"adminToken\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "",
              "pm.test(\"201 Created\", () => pm.response.code === 201);",
              "pm.environment.set(\"categoryId\", pm.response.json().id);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "E) Create Product (admin)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/products",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "products"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"name\": \"Running Shoe\", \"description\": \"Lightweight runner\", \"price\": 199.99, \"stock\": 25, \"category_id\": \"{{categoryId}}\"}"
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"token\", pm.environment.get(\"adminToken\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "",
              "pm.test(\"201 Created\", () => pm.response.code === 201);",
              "pm.environment.set(\"productId\", pm.response.json().id);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "F) List Products (customer)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/products?q=shoe&min=100&max=300&page=1",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "products?q=shoe&min=100&max=300&page=1"
          ]
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"token\", pm.environment.get(\"customerToken\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"200 OK\", () => pm.response.code === 200);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "G) Add to Cart (customer)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/cart",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "cart"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"product_id\": \"{{productId}}\", \"quantity\": 2}"
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"token\", pm.environment.get(\"customerToken\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "",
              "pm.test(\"201 Created\", () => pm.response.code === 201);",
              "pm.environment.set(\"cartItemId\", pm.response.json().id);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "H) Update Cart (customer)",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/cart/{{cartItemId}}",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "cart",
            "{{cartItemId}}"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"quantity\": 3}"
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"token\", pm.environment.get(\"customerToken\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"200 OK\", () => pm.response.code === 200);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "I) View Cart (customer)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/cart",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "cart"
          ]
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"token\", pm.environment.get(\"customerToken\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"200 OK\", () => pm.response.code === 200);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "J) Create Order (customer)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/orders",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "orders"
          ]
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"token\", pm.environment.get(\"customerToken\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "",
              "pm.test(\"201 Created\", () => pm.response.code === 201);",
              "pm.environment.set(\"orderId\", pm.response.json().id);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "K) Mock Pay (success)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/orders/{{orderId}}/payment",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "orders",
            "{{orderId}}",
            "payment"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"force_status\": \"success\"}"
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"token\", pm.environment.get(\"customerToken\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "",
              "pm.test(\"201 Created\", () => pm.response.code === 201);",
              "pm.expect(pm.response.json().status).to.eql(\"success\");",
              "pm.environment.set(\"paymentId\", pm.response.json().id);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "L) Get Payment",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/payments/{{paymentId}}",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "payments",
            "{{paymentId}}"
          ]
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"token\", pm.environment.get(\"customerToken\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"200 OK\", () => pm.response.code === 200);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "M) Update Order Status (admin)",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base}}/api/orders/{{orderId}}/status",
          "host": [
            "{{base}}"
          ],
          "path": [
            "api",
            "orders",
            "{{orderId}}",
            "status"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"status\": \"shipped\"}"
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"token\", pm.environment.get(\"adminToken\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"200 OK\", () => pm.response.code === 200);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}